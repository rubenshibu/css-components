{"version":3,"file":"engine.io.esm.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/transport.js","../build/esm/contrib/parseqs.js","../build/esm/contrib/yeast.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../build/esm/index.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport const protocol = Socket.protocol;\nexport { Transport } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./transports/websocket-constructor.js\";\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","TEXT_DECODER","Emitter","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","alphabet","map","prev","seed","num","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Request","uri","method","undefined","_a","xd","xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","status","onLoad","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","shouldIncludeBinaryHeader","transports","websocket","forceBase64","name","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","timestampRequests","timestampParam","b64","webtransport","WebTransport","transport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","reader","readable","getReader","binaryFlag","writer","getWriter","read","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","sid","of","polling","location","isSSL","protocol","createCookieJar","poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","encodePayload","doWrite","request","assign","req","xhrStatus","pollXhr","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","createTransport","EIO","priorWebsocketSuccess","shift","setTransport","onDrain","probe","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":"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"}