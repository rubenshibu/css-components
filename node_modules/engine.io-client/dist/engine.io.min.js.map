{"version":3,"file":"engine.io.min.js","sources":["../node_modules/engine.io-parser/build/esm/commons.js","../node_modules/engine.io-parser/build/esm/encodePacket.browser.js","../node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","../node_modules/engine.io-parser/build/esm/index.js","../node_modules/engine.io-parser/build/esm/decodePacket.browser.js","../node_modules/@socket.io/component-emitter/index.mjs","../build/esm/globalThis.browser.js","../build/esm/util.js","../build/esm/contrib/parseqs.js","../build/esm/contrib/yeast.js","../build/esm/transport.js","../build/esm/contrib/has-cors.js","../build/esm/transports/xmlhttprequest.browser.js","../build/esm/transports/polling.js","../build/esm/transports/websocket-constructor.browser.js","../build/esm/transports/websocket.js","../build/esm/transports/webtransport.js","../build/esm/transports/index.js","../build/esm/contrib/parseuri.js","../build/esm/socket.js","../build/esm/browser-entrypoint.js"],"sourcesContent":["const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data\n            .arrayBuffer()\n            .then(toArray)\n            .then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, encoded => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nlet TEXT_DECODER;\nexport function decodePacketFromBinary(data, isBinary, binaryType) {\n    if (!TEXT_DECODER) {\n        // lazily created for compatibility with old browser platforms\n        TEXT_DECODER = new TextDecoder();\n    }\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    const isPlainBinary = isBinary || data[0] < 48 || data[0] > 54;\n    return decodePacket(isPlainBinary ? data : TEXT_DECODER.decode(data), binaryType);\n}\nexport const protocol = 4;\nexport { encodePacket, encodePacketToBinary, encodePayload, decodePacket, decodePayload };\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","import { globalThisShim as globalThis } from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","// imported from https://github.com/unshiftio/yeast\n'use strict';\nconst alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split(''), length = 64, map = {};\nlet seed = 0, i = 0, prev;\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nexport function encode(num) {\n    let encoded = '';\n    do {\n        encoded = alphabet[num % length] + encoded;\n        num = Math.floor(num / length);\n    } while (num > 0);\n    return encoded;\n}\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nexport function decode(str) {\n    let decoded = 0;\n    for (i = 0; i < str.length; i++) {\n        decoded = decoded * length + map[str.charAt(i)];\n    }\n    return decoded;\n}\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nexport function yeast() {\n    const now = encode(+new Date());\n    if (now !== prev)\n        return seed = 0, prev = now;\n    return now + '.' + encode(seed++);\n}\n//\n// Map each character to its index.\n//\nfor (; i < length; i++)\n    map[alphabet[i]] = i;\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nclass TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","// browser shim for xmlhttprequest module\nimport { hasCORS } from \"../contrib/has-cors.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nexport function XHR(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\nexport function createCookieJar() { }\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nimport { createCookieJar, XHR as XMLHttpRequest, } from \"./xmlhttprequest.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globalThis.js\";\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false,\n    });\n    return null != xhr.responseType;\n})();\nexport class Polling extends Transport {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        this.polling = false;\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n        if (this.opts.withCredentials) {\n            this.cookieJar = createCookieJar();\n        }\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, cookieJar: this.cookieJar }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    create() {\n        var _a;\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, true);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this.opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(xhr);\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    onError(err) {\n        this.emitReserved(\"error\", err, this.xhr);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this.cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import { globalThisShim as globalThis } from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport { yeast } from \"../contrib/yeast.js\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket, } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @param {Object} opts - connection options\n     * @protected\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \n                        // @ts-ignore\n                        \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @private\n     */\n    check() {\n        return !!WebSocket;\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"./websocket-constructor.js\";\nimport { encodePacketToBinary, decodePacketFromBinary, } from \"engine.io-parser\";\nfunction shouldIncludeBinaryHeader(packet, encoded) {\n    // 48 === \"0\".charCodeAt(0) (OPEN packet type)\n    // 54 === \"6\".charCodeAt(0) (NOOP packet type)\n    return (packet.type === \"message\" &&\n        typeof packet.data !== \"string\" &&\n        encoded[0] >= 48 &&\n        encoded[0] <= 54);\n}\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        // @ts-ignore\n        if (typeof WebTransport !== \"function\") {\n            return;\n        }\n        // @ts-ignore\n        this.transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        this.transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this.transport.ready.then(() => {\n            this.transport.createBidirectionalStream().then((stream) => {\n                const reader = stream.readable.getReader();\n                this.writer = stream.writable.getWriter();\n                let binaryFlag;\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        if (!binaryFlag && value.byteLength === 1 && value[0] === 54) {\n                            binaryFlag = true;\n                        }\n                        else {\n                            // TODO expose binarytype\n                            this.onPacket(decodePacketFromBinary(value, binaryFlag, \"arraybuffer\"));\n                            binaryFlag = false;\n                        }\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const handshake = this.query.sid ? `0{\"sid\":\"${this.query.sid}\"}` : \"0\";\n                this.writer\n                    .write(new TextEncoder().encode(handshake))\n                    .then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacketToBinary(packet, (data) => {\n                if (shouldIncludeBinaryHeader(packet, data)) {\n                    this.writer.write(Uint8Array.of(54));\n                }\n                this.writer.write(data).then(() => {\n                    if (lastPacket) {\n                        nextTick(() => {\n                            this.writable = true;\n                            this.emitReserved(\"drain\");\n                        }, this.setTimeoutFn);\n                    }\n                });\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this.transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { Polling } from \"./polling.js\";\nimport { WS } from \"./websocket.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: Polling,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts = {}) {\n        super();\n        this.writeBuffer = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parse(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\n            \"polling\",\n            \"websocket\",\n            \"webtransport\",\n        ];\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this.beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", (reason) => this.onClose(\"transport close\", reason));\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this.upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this.getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    getWritablePackets() {\n        const shouldCheckPayloadSize = this.maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this.maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"beforeunload\", this.beforeunloadEventListener, false);\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\n","import { Socket } from \"./socket.js\";\nexport default (uri, opts) => new Socket(uri, opts);\n"],"names":["PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","TEXT_ENCODER","ERROR_PACKET","type","data","withNativeBlob","Blob","prototype","toString","call","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","chars","lookup","i","length","charCodeAt","TEXT_DECODER","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","String","fromCharCode","Emitter","mixin","on","addEventListener","event","fn","_callbacks","this","push","once","off","apply","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","slice","emitReserved","listeners","hasListeners","globalThisShim","self","window","Function","pick","attr","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","globalThis","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","qs","qry","pairs","l","pair","decodeURIComponent","prev","TransportError","reason","description","context","Error","Transport","writable","query","socket","readyState","doOpen","doClose","onClose","packets","write","packet","onPacket","details","onPause","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","encode","alphabet","map","seed","num","encoded","Math","floor","yeast","now","Date","value","XMLHttpRequest","err","hasCORS","XHR","xdomain","e","concat","join","empty","hasXHR2","responseType","Polling","polling","location","isSSL","protocol","xd","forceBase64","_this","withCredentials","cookieJar","createCookieJar","poll","pause","_this2","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","_this3","onOpen","close","_this4","count","encodePayload","_this5","doWrite","timestampRequests","timestampParam","sid","b64","createUri","Request","uri","req","request","method","xhrStatus","_this6","onError","onData","_this7","pollXhr","undefined","_a","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","addCookies","requestTimeout","timeout","onreadystatechange","_this9","parseCookies","status","onLoad","send","document","index","requestsCount","requests","cleanup","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WT","WebTransport","transport","transportOptions","name","closed","ready","createBidirectionalStream","stream","binaryFlag","reader","readable","getReader","writer","getWriter","read","done","isBinary","TextDecoder","isPlainBinary","decodePacketFromBinary","handshake","TextEncoder","arrayBuffer","encodePacketToBinary","shouldIncludeBinaryHeader","of","transports","websocket","webtransport","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","regx","names","queryKey","$0","$1","$2","Socket","writeBuffer","prevBufferLen","_extends","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","beforeunloadEventListener","offlineEventListener","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","msg","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","resetPingTimeout","sendPacket","code","filterUpgrades","maxPayload","getWritablePackets","payloadSize","c","utf8Length","ceil","size","options","compress","cleanupAndClose","waitForUpgrade","filteredUpgrades","j"],"mappings":"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"}